#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <Windows.h>
using namespace std;
//C:\Users\admin\Desktop\laba.exe   путь программы
//E:\laba.exe


void spravka()                      //справка
{
cout<<"\nСправка:";
cout<<"\n\nФормат ввода строки - command n v";
cout<<"\ncommand - путь до программы";
cout<<"\nn - размер матрицы";
cout<<"\nv - способ ввода:";
cout<<"\n  'm' - ручной или'r' - рандомный";
cout<<"\n\nРабота выполнена: Арбакова А.В., 16.06.2021, DEV C++ 5.11\n"<<endl;	
}

void vivodMatrixA(int *A, int n)   //вывод матрицы А
{
	cout<<endl<<"Матрица А:"<<endl;
	for(int i=0; i<2*n; ++i)
	{
	  for (int j=0; j<2*n; ++j)
	     printf("%3d", A[i*2*n+j]);
	  cout<<endl;
	}
}

void chetCNmatrixB(int *A, int n)  //решение задачи, включающее подсчет четных и нечетных элементов
{                                   //и запись матрицы В по условию задания
	int chet=0, nechet=0;
	int ch[4*n], nech[4*n];
	int B[2*n][2*n];
	for(int i=0; i<2*n; ++i)              
	  for (int j=0; j<2*n; ++j)
	     if (A[i*2*n+j] % 2 == 0)         //определение четности элемента и запись его в соотвественный массив четности
	     {
	         ch[chet]=A[i*2*n+j];         //массив с четными элементами
	         chet++;                      //количество четных элементов
	     }
	     else
	     {
	         nech[nechet]=A[i*2*n+j];     //массив с нечетными элементами
	         nechet++;                    //количество нечетных элементов
	     }
	cout<<endl<<"Количество четных элементов: "<<chet<<endl;
	cout<<"Количество нечетных элементов: "<<nechet<<endl<<endl;
	int q=0, p=0;
	if (chet==nechet)                     //условие задания - равность количества четных и нечетных элементов
	{
	  for(int i=0; i<2*n; i++)
	     for (int j=0; j<2*n; j++)
	     {
		    B[i][j]=nech[q];              //поочередная запись нечетных и четных элементов в матрицу В
		    B[i][j+1]=ch[p];
		    q++; p++; j++;
	     }
	  cout<<endl<<"Полученная матрица B:"<<endl; 
	  for(int i=0; i<2*n; i++)            //вывод матрицы В
	  {
		cout<<"  ";
	    for (int j=0; j<2*n; j++)
	        cout<<B[i][j]<<"  ";
		cout<<endl;
	  }
	}
	else
	  cout<<"Количество четных и нечетных элементов матрицы должны быть равны. Попробуйте еще раз.";	
}


int main(int argc, char* argv[])
{
SetConsoleCP(1251);                       //русский язык в консоли на ввод и вывод
SetConsoleOutputCP(1251);
int n = atoi(argv[1]);                    //перевод строк. в числ. для значения размера матрицы - n
int A[2*n][2*n];

cout<<endl<<"Вызов справки: command(путь программы) h"<<endl;
if (* argv[1] == 'h')                     //h - help - справка
  {
  	spravka();
	return 0;
  }                                       //условие задачи
cout<<"\nЗадание:\nСформировать из квадратной матрицы А порядка 2*n матрицу В, помещая нечетные элементы исходной матрицы А в нечетные столбцы, четные элементы – в четные. Количество четных и нечетных элементов матрицы А должно быть одинаково."<<endl;

if ((argc==3) && ((* argv[1]>='0') && (* argv[1]<='9')))  //условие на ввод всех трех аргументов (путь - размер - способ)
{
  if (* argv[2]=='m')                     //m - manual - ручной ввод
  {
	cout<<"Введите матрицу А:"<<endl;     //ввод матрицы A - ручной
    for(int i=0; i<2*n; i++)
	  for (int j=0; j<2*n; j++)
	  {
	     cout<<"A["<<i+1<<"]["<<j+1<<"] = ";
	     cin>>A[i][j];
	  }
	vivodMatrixA(&A[0][0], n);            //вызов функции для вывода матрицы А
    chetCNmatrixB(&A[0][0], n);           //вызов функции для решения задания
  }
  else if (* argv[2]=='r')                //r - random - рандомный(случайный)
  {
	for(int i=0; i<2*n; i++)              //ввод матрицы A - рандомный
	  for (int j=0; j<2*n; j++)
        A[i][j] =  rand() % 10 + 1;   
	vivodMatrixA(&A[0][0], n);            //вызов функции для вывода матрицы А
    chetCNmatrixB(&A[0][0], n);           //вызов функции для решения задания
  }
  else
    spravka();                            //вызов справки при неправильном вводе способа
}
else
  spravka();                              //вызов справки при неправильном вводе размера матрицы и количества аргументов
system("pause");
}
